# -*- coding: utf-8 -*-
"""

Automatically generated by Colaboratory.

Original file is located at
   
"""

from keras.datasets import mnist

(x_train, y_train), (x_test, y_test) = mnist.load_data()

print(x_train.shape)
type(y_train)

from google.colab import drive
drive.mount('/content/drive')



img_rows = x_train[0].shape[0]
img_cols = x_train[1].shape[0]

x_train = x_train.reshape(x_train.shape[0], img_rows, img_cols,1)
x_test = x_test.reshape(x_test.shape[0], img_rows, img_cols, 1)
print(x_train.shape)
input_shape = (img_rows, img_cols, 1)
x_train = x_train.astype('float32')
x_test = x_test.astype('float32')
type(x_train)
x_train /=255 
x_test /=255 
print('x_train shape:', x_train.shape) 
print(x_train.shape[0], 'train samples') 
print(x_test.shape[0], 'test samples')

print(x_train[1].shape)

from keras.utils import np_utils
y_train = np_utils.to_categorical(y_train)
y_test = np_utils.to_categorical(y_test)
num_classes = y_test.shape[1] 
num_pixels = x_train.shape[1] * x_train.shape[2]

import tensorflow as tf 
from tensorflow import keras 
from tensorflow.keras import layers

model = tf.keras.Sequential() 
model.add(tf.keras.layers.Conv2D(32, kernel_size=(3,3), activation = 'relu', input_shape = input_shape)) 
model.add(tf.keras.layers.Conv2D(64, (3,3), activation='relu')) 
model.add(tf.keras.layers.MaxPooling2D(pool_size=(2,2))) 
model.add(tf.keras.layers.Dropout(0.25)) 
model.add(tf.keras.layers.Flatten()) 
model.add(tf.keras.layers.Dense(128, activation='relu')) 
model.add(tf.keras.layers.Dropout(0.5))
model.add(tf.keras.layers.Dense(num_classes, activation='softmax'))

model.compile(loss ="categorical_crossentropy", optimizer= 'SGD', metrics = ['accuracy'])
model.summary()

batch_size = 32 
epochs = 20

history = model.fit(x_train, y_train, batch_size= batch_size, epochs = epochs, verbose=1, validation_data= (x_test, y_test))

score = model.evaluate(x_test, y_test, verbose=0) 
print('Test_loss:', score[0]) 
print('Test_accuracy:', score[1])

model.save("saved_models/2/")
model.save("1.pkl")